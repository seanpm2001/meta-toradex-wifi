From 2611a43811a4b9cb4060412534bee32dc5409972 Mon Sep 17 00:00:00 2001
From: Rafael Beims <rafael.beims@toradex.com>
Date: Fri, 17 Mar 2023 20:33:35 +0000
Subject: [PATCH] Patch for kernel 5.15

---
 mlinux/moal_main.c | 68 ++++++++++++++++++++++++++++++++++++++++++++++
 mlinux/moal_shim.c | 15 ++++++++++
 2 files changed, 83 insertions(+)

diff --git a/mlinux/moal_main.c b/mlinux/moal_main.c
index a192ce2..348c068 100755
--- a/mlinux/moal_main.c
+++ b/mlinux/moal_main.c
@@ -53,6 +53,7 @@ Change log:
 #include <net/tcp.h>
 #include <net/dsfield.h>
 
+
 #ifdef CONFIG_OF
 #include <linux/of.h>
 #endif
@@ -2423,10 +2424,17 @@ woal_set_user_init_data(moal_handle *handle, int type, t_u8 wait_option,
 	if (type == INIT_CFG_DATA) {
 		if (req_fw_nowait && !handle->fw_reload) {
 #if LINUX_VERSION_CODE > KERNEL_VERSION(2, 6, 32)
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(5, 10, 0)
+			if ((request_firmware_nowait
+			     (THIS_MODULE, FW_ACTION_UEVENT, init_cfg,
+			      handle->hotplug_device, GFP_KERNEL, handle,
+			      woal_request_init_cfg_data_callback)) < 0) {
+#else
 			if ((request_firmware_nowait
 			     (THIS_MODULE, FW_ACTION_HOTPLUG, init_cfg,
 			      handle->hotplug_device, GFP_KERNEL, handle,
 			      woal_request_init_cfg_data_callback)) < 0) {
+#endif
 #else
 #if LINUX_VERSION_CODE > KERNEL_VERSION(2, 6, 13)
 			if ((request_firmware_nowait
@@ -2467,11 +2475,19 @@ woal_set_user_init_data(moal_handle *handle, int type, t_u8 wait_option,
 		/* 'country_txpwrlimit' holds the value of Configured Tx Power Limit */
 		if (req_fw_nowait && !handle->fw_reload) {
 #if LINUX_VERSION_CODE > KERNEL_VERSION(2, 6, 32)
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(5, 10, 0)
+			if ((request_firmware_nowait
+			     (THIS_MODULE, FW_ACTION_UEVENT,
+			      country_txpwrlimit, handle->hotplug_device,
+			      GFP_KERNEL, handle,
+			      woal_request_init_user_conf_callback)) < 0) {
+#else
 			if ((request_firmware_nowait
 			     (THIS_MODULE, FW_ACTION_HOTPLUG,
 			      country_txpwrlimit, handle->hotplug_device,
 			      GFP_KERNEL, handle,
 			      woal_request_init_user_conf_callback)) < 0) {
+#endif
 #else
 #if LINUX_VERSION_CODE > KERNEL_VERSION(2, 6, 13)
 			if ((request_firmware_nowait
@@ -2514,10 +2530,17 @@ woal_set_user_init_data(moal_handle *handle, int type, t_u8 wait_option,
 	} else if (type == INIT_HOSTCMD_CFG_DATA) {
 		if (req_fw_nowait && !handle->fw_reload) {
 #if LINUX_VERSION_CODE > KERNEL_VERSION(2, 6, 32)
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(5, 10, 0)
+			if ((request_firmware_nowait
+			     (THIS_MODULE, FW_ACTION_UEVENT, init_hostcmd_cfg,
+			      handle->hotplug_device, GFP_KERNEL, handle,
+			      woal_request_init_user_conf_callback)) < 0) {
+#else
 			if ((request_firmware_nowait
 			     (THIS_MODULE, FW_ACTION_HOTPLUG, init_hostcmd_cfg,
 			      handle->hotplug_device, GFP_KERNEL, handle,
 			      woal_request_init_user_conf_callback)) < 0) {
+#endif
 #else
 #if LINUX_VERSION_CODE > KERNEL_VERSION(2, 6, 13)
 			if ((request_firmware_nowait
@@ -2797,10 +2820,17 @@ woal_init_fw_dpc(moal_handle *handle)
 	if (dpd_data_cfg && strncmp(dpd_data_cfg, "none", strlen("none"))) {
 		if (req_fw_nowait && !handle->fw_reload) {
 #if LINUX_VERSION_CODE > KERNEL_VERSION(2, 6, 32)
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(5, 10, 0)
+			if ((request_firmware_nowait
+			     (THIS_MODULE, FW_ACTION_UEVENT, dpd_data_cfg,
+			      handle->hotplug_device, GFP_KERNEL, handle,
+			      woal_request_init_dpd_conf_callback)) < 0) {
+#else
 			if ((request_firmware_nowait
 			     (THIS_MODULE, FW_ACTION_HOTPLUG, dpd_data_cfg,
 			      handle->hotplug_device, GFP_KERNEL, handle,
 			      woal_request_init_dpd_conf_callback)) < 0) {
+#endif
 #else
 #if LINUX_VERSION_CODE > KERNEL_VERSION(2, 6, 13)
 			if ((request_firmware_nowait
@@ -2844,10 +2874,17 @@ woal_init_fw_dpc(moal_handle *handle)
 	if (txpwrlimit_cfg && strncmp(txpwrlimit_cfg, "none", strlen("none"))) {
 		if (req_fw_nowait && !handle->fw_reload) {
 #if LINUX_VERSION_CODE > KERNEL_VERSION(2, 6, 32)
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(5, 10, 0)
+			if ((request_firmware_nowait
+			     (THIS_MODULE, FW_ACTION_UEVENT, txpwrlimit_cfg,
+			      handle->hotplug_device, GFP_KERNEL, handle,
+			      woal_request_init_txpwr_conf_callback)) < 0) {
+#else
 			if ((request_firmware_nowait
 			     (THIS_MODULE, FW_ACTION_HOTPLUG, txpwrlimit_cfg,
 			      handle->hotplug_device, GFP_KERNEL, handle,
 			      woal_request_init_txpwr_conf_callback)) < 0) {
+#endif
 #else
 #if LINUX_VERSION_CODE > KERNEL_VERSION(2, 6, 13)
 			if ((request_firmware_nowait
@@ -2891,10 +2928,17 @@ woal_init_fw_dpc(moal_handle *handle)
 	if (cal_data_cfg && strncmp(cal_data_cfg, "none", strlen("none"))) {
 		if (req_fw_nowait && !handle->fw_reload) {
 #if LINUX_VERSION_CODE > KERNEL_VERSION(2, 6, 32)
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(5, 10, 0)
+			if ((request_firmware_nowait
+			     (THIS_MODULE, FW_ACTION_UEVENT, cal_data_cfg,
+			      handle->hotplug_device, GFP_KERNEL, handle,
+			      woal_request_init_user_conf_callback)) < 0) {
+#else
 			if ((request_firmware_nowait
 			     (THIS_MODULE, FW_ACTION_HOTPLUG, cal_data_cfg,
 			      handle->hotplug_device, GFP_KERNEL, handle,
 			      woal_request_init_user_conf_callback)) < 0) {
+#endif
 #else
 #if LINUX_VERSION_CODE > KERNEL_VERSION(2, 6, 13)
 			if ((request_firmware_nowait
@@ -3081,11 +3125,19 @@ woal_request_fw(moal_handle *handle)
 	PRINTM(MMSG, "Request firmware: %s\n", handle->drv_mode.fw_name);
 	if (req_fw_nowait && !handle->fw_reload) {
 #if LINUX_VERSION_CODE > KERNEL_VERSION(2, 6, 32)
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(5, 10, 0)
+		err = request_firmware_nowait(THIS_MODULE, FW_ACTION_UEVENT,
+					      handle->drv_mode.fw_name,
+					      handle->hotplug_device,
+					      GFP_KERNEL, handle,
+					      woal_request_fw_callback);
+#else
 		err = request_firmware_nowait(THIS_MODULE, FW_ACTION_HOTPLUG,
 					      handle->drv_mode.fw_name,
 					      handle->hotplug_device,
 					      GFP_KERNEL, handle,
 					      woal_request_fw_callback);
+#endif
 #else
 #if LINUX_VERSION_CODE > KERNEL_VERSION(2, 6, 13)
 		err = request_firmware_nowait(THIS_MODULE, FW_ACTION_HOTPLUG,
@@ -7448,6 +7500,9 @@ woal_create_dump_dir(moal_handle *phandle, char *dir_buf, int buf_size)
 	struct path path;
 	t_u32 sec, usec;
 	int ret;
+#if LINUX_VERSION_CODE > KERNEL_VERSION(5,10,0)
+        struct user_namespace *mnt_userns;
+#endif
 
 	ENTER();
 
@@ -7475,7 +7530,12 @@ woal_create_dump_dir(moal_handle *phandle, char *dir_buf, int buf_size)
 		       dir_buf);
 		goto default_dir;
 	}
+#if LINUX_VERSION_CODE > KERNEL_VERSION(5,10,0)
+        mnt_userns = mnt_user_ns(path.mnt);
+	ret = vfs_mkdir(mnt_userns, path.dentry->d_inode, dentry, 0777);
+#else
 	ret = vfs_mkdir(path.dentry->d_inode, dentry, 0777);
+#endif
 #if LINUX_VERSION_CODE < KERNEL_VERSION(4,7,0)
 	mutex_unlock(&path.dentry->d_inode->i_mutex);
 #else
@@ -8191,13 +8251,21 @@ woal_store_dpd_log(moal_handle *phandle, mlan_event *pmevent)
 	struct kstat ks;
 	t_u32 file_limit = DPD_LOG_MAX_SIZE;
 	t_u8 over_size = 0;
+#if LINUX_VERSION_CODE > KERNEL_VERSION(5,10,0)
+        struct user_namespace *mnt_userns;
+#endif
 
 	ENTER();
 	dentry = kern_path_create(AT_FDCWD, "/data", &path, 1);
 	if (IS_ERR(dentry)) {
 		goto save_dpdlog;
 	}
+#if LINUX_VERSION_CODE > KERNEL_VERSION(5,10,0)
+        mnt_userns = mnt_user_ns(path.mnt);
+	vfs_mkdir(mnt_userns, path.dentry->d_inode, dentry, 0777);
+#else
 	vfs_mkdir(path.dentry->d_inode, dentry, 0777);
+#endif
 #if LINUX_VERSION_CODE < KERNEL_VERSION(4,7,0)
 	mutex_unlock(&path.dentry->d_inode->i_mutex);
 #else
diff --git a/mlinux/moal_shim.c b/mlinux/moal_shim.c
index dae1643..f38222c 100755
--- a/mlinux/moal_shim.c
+++ b/mlinux/moal_shim.c
@@ -1978,6 +1978,12 @@ moal_recv_event(IN t_void *pmoal_handle, IN pmlan_event pmevent)
 				priv->phandle->bg_scan_priv = priv;
 				queue_work(priv->phandle->rx_workqueue,
 					   &priv->phandle->rx_work);
+#else
+#if CFG80211_VERSION_CODE >= KERNEL_VERSION(5, 10, 0)
+				if (mutex_is_locked(&priv->wdev->wiphy->mtx))
+					cfg80211_sched_scan_stopped_locked(priv->wdev->wiphy, 0);
+				else
+					cfg80211_sched_scan_stopped(priv->wdev->wiphy, 0);
 #else
 				if (rtnl_is_locked())
 					cfg80211_sched_scan_stopped_rtnl(priv->
@@ -1995,6 +2001,7 @@ moal_recv_event(IN t_void *pmoal_handle, IN pmlan_event pmevent)
 #endif
 						);
 				priv->sched_scanning = MFALSE;
+#endif
 #endif
 				PRINTM(MEVENT, "Sched_Scan stopped\n");
 
@@ -2026,6 +2033,13 @@ moal_recv_event(IN t_void *pmoal_handle, IN pmlan_event pmevent)
 				queue_work(priv->phandle->rx_workqueue,
 					   &priv->phandle->rx_work);
 #else
+#if CFG80211_VERSION_CODE >= KERNEL_VERSION(5, 10, 0)
+				if (mutex_is_locked(&priv->wdev->wiphy->mtx))
+					cfg80211_sched_scan_stopped_locked(priv->wdev->wiphy, 0);
+				else
+					cfg80211_sched_scan_stopped(priv->wdev->wiphy, 0);
+#else
+
 				if (rtnl_is_locked())
 					cfg80211_sched_scan_stopped_rtnl(priv->
 									 wdev->
@@ -2042,6 +2056,7 @@ moal_recv_event(IN t_void *pmoal_handle, IN pmlan_event pmevent)
 #endif
 						);
 				priv->sched_scanning = MFALSE;
+#endif
 #endif
 				PRINTM(MEVENT, "Sched_Scan stopped\n");
 			}
-- 
2.30.2

